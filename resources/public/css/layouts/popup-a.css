
/***** Popup A *****/
/*** Wrapper ***/

.l-popup-a {
  align-items:     center;
  display:         flex;
  height:          100vh;
  justify-content: center;
  left:            0;
  position:        fixed;
  top:             0;
  width:           100%;
}

/*** Wrapper ***/

/*** Cover ***/

.l-popup-a--cover {
  background-color: var( --black-semi-transparent );
  height:           100%;
  left:             0;
  position:         absolute;
  top:              0;
  width:            100%;
}

/*** Cover ***/

/*** Structure ***/

.l-popup-a--structure {
  display:        flex;
  flex-direction: column;
  max-height:     calc(100% - 96px);
  max-width:      calc(100% - 96px);
  overflow:       hidden;
}

[data-stretch-orientation="both"]       .l-popup-a--structure,
[data-stretch-orientation="horizontal"] .l-popup-a--structure {
  width: calc(100% - 96px);
}

[data-stretch-orientation="both"]     .l-popup-a--structure,
[data-stretch-orientation="vertical"] .l-popup-a--structure {
  height: calc(100vh - 96px);
}

.l-popup-a--hack {
  /* A popup-a layouton megjelenített header és footer tartalmakat a body tartalom felett szükséges,
   * megjeleníteni (a DOM-fában későbbi elemekként), hogy a header és footer tartalmakon esetlegesen
   * megjelenített scroll-shadow árnyékot ne takarja el a body tartalom!
   * A body és header tartalmakat fordított sorrendben (body után header) szükséges a DOM-fába
   * csatolni, és az .l-popup-a--hack elem jeleníti meg őket visszafordítva. */
  display:        flex;
  flex-direction: column-reverse;
  flex-grow:      1;
  overflow:       hidden;
}

/*** Structure ***/

/*** Body ***/

.l-popup-a--body {
  flex-grow: 1;
}

.l-popup-a--body-content {
  height: 100%;
}

/*** Body ***/
/***** Popup A *****/
