
/***** Box popup *****/
/*** Layout ***/

.l-box-popup {
  display:         flex;
  justify-content: center;
  left:            0;
  position:        fixed;
  top:             50%;
  width:           100%;
}

/*** Layout ***/

/*** Cover ***/

.l-box-popup--cover {
  height:    100%;
  left:      0;
  opacity:  .85;
  position: fixed;
  top:      0;
  width:    100%;
}

/*** Cover ***/

/*** Wrapper ***/

.l-box-popup--wrapper {
  display: flex;
  max-height: 100vh;
  transform: translateY( -50% );

  /* XXX#0213
   * By setting the .l-box-popup--wrapper element's positioning to absolute
   * it no more expands the height of the .l-box-popup element.
   * It's neccessarry because of the Y axis offsetting with the transform property.
   * Without absolute positioning, the .l-box-popup element would has the same
   * height as the .l-box-popup--wrapper which is offsetted by the transform
   * property and no longer there where it would keep its place originally. */
  position: absolute;
}

[data-stretch-orientation="both"]       .l-box-popup--wrapper,
[data-stretch-orientation="horizontal"] .l-box-popup--wrapper {
  width: 100%;
}

[data-stretch-orientation="both"]     .l-box-popup--wrapper,
[data-stretch-orientation="vertical"] .l-box-popup--wrapper {
  height: 100vh;
}

/*** Wrapper ***/

/*** Structure ***/

.l-box-popup--structure {
  display:        flex;
  flex-direction: column;

  /* Makes the popup structure fits into the wrapper, if the wrapper has the
   * :data-content-min-width attribute. */
  width: 100%;
}

[data-stretch-orientation="both"]       .l-box-popup--structure,
[data-stretch-orientation="horizontal"] .l-box-popup--structure {
  width: 100%;
}

[data-stretch-orientation="both"]     .l-box-popup--structure,
[data-stretch-orientation="vertical"] .l-box-popup--structure {
  height: 100%;
}

/*** Structure ***/
/***** Box popup *****/



/***** Plain popup *****/
/*** Layout ***/

.l-plain-popup {
  left:     0;
  position: fixed;
  top:      0;
  width:    100%
}

/*** Layout ***/

/*** Cover ***/

.l-plain-popup--cover {
  height:   100%;
  left:     0;
  opacity:  .85;
  position: fixed;
  top:      0;
  width:    100%;
}

/*** Cover ***/
/***** Plain popup *****/



/***** Sidebar *****/
/*** Layout ***/

.l-sidebar {
  height: 100vh;
  width:  0;
}

/*** Layout ***/

/*** Wrapper ***/

.l-sidebar--wrapper {
  height:     100vh;
  padding:    12px;
  position:   fixed;
  top:        0;
  transition: transform .1s .3s;
}

.l-sidebar[data-position-fixed="tl"] .l-sidebar--wrapper {
  left:      0;
  transform: translateX(-100%);
}

.l-sidebar[data-position-fixed="tr"] .l-sidebar--wrapper {
  right:     0;
  transform: translateX(100%);
}

.l-sidebar:hover .l-sidebar--wrapper {
  transform: translateX(0);
}

/*** Wrapper ***/

/*** Body ***/

.l-sidebar--body {
  height:     100%;
  overflow-y: hidden;
}

/*** Body ***/

/*** Sensor ***/

.l-sidebar--sensor {
  position:   fixed;
  height:     calc(100vh - 48px);
  top:        48px;
  transition: opacity .05s .5s;
  opacity:    .6;
  width:      12px;
}

.l-sidebar:hover .l-sidebar--sensor {
  opacity:    0;
  transition: opacity .05s;
}

.l-sidebar[data-position-fixed="tl"] .l-sidebar--sensor {
  left: 0;
}

.l-sidebar[data-position-fixed="tr"] .l-sidebar--sensor {
  right: 0;
}

/*** Sensor ***/
/***** Sidebar *****/



/***** Struct popup *****/
/*** Layout ***/

.l-struct-popup {
  display:         flex;
  justify-content: center;
  left:            0;
  position:        fixed;
  top:             50%;
  width:           100%;
}

/*** Layout ***/

/*** Cover ***/

.l-struct-popup--cover {
  height:    100%;
  left:      0;
  opacity:  .85;
  position: fixed;
  top:      0;
  width:    100%;
}

/*** Cover ***/

/*** Wrapper ***/

.l-struct-popup--wrapper {
  display: flex;
  max-height: 100vh;
  transform: translateY( -50% );

  /* XXX#0213 */
  position: absolute;
}

[data-stretch-orientation="both"]       .l-struct-popup--wrapper,
[data-stretch-orientation="horizontal"] .l-struct-popup--wrapper {
  width: 100%;
}

[data-stretch-orientation="both"]     .l-struct-popup--wrapper,
[data-stretch-orientation="vertical"] .l-struct-popup--wrapper {
  height: 100vh;
}

/*** Wrapper ***/

/*** Structure ***/

.l-struct-popup--structure {
  display:        flex;
  flex-direction: column;

  /* Makes the popup structure fits into the wrapper, if the wrapper has the
   * :data-content-min-width attribute. */
  width: 100%;
}

[data-stretch-orientation="both"]       .l-struct-popup--structure,
[data-stretch-orientation="horizontal"] .l-struct-popup--structure {
  width: 100%;
}

[data-stretch-orientation="both"]     .l-struct-popup--structure,
[data-stretch-orientation="vertical"] .l-struct-popup--structure {
  height: 100%;
}

.l-struct-popup--hack {
  /* In struct-popup layouts, the header and footer has to be above the body (Z axis)
   * to make the possibly visible shadows of header and footer visible.
   * The footer element is placed after the body element in the DOM tree by default,
   * but the header had to be moved after the body and the .l-struct-popup--hack
   * contains them (header and body) to make their visible order normal again. */
  display:        flex;
  flex-direction: column-reverse;
  flex-grow:      1;
  overflow:       hidden;
}

/*** Structure ***/

/*** Body ***/

.l-struct-popup--body {
  flex-grow: 1;
}

.l-struct-popup--body-content {
  height: 100%;
}

/*** Body ***/
/***** Struct popup *****/
